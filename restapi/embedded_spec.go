// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Service API",
    "title": "SERVICE",
    "version": "1.0.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/service",
  "paths": {
    "/Resource": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource for a given application.",
        "operationId": "postResourceByAppCode",
        "parameters": [
          {
            "description": "Create a new resource",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "422": {
            "description": "Unprocessable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "security": [],
        "tags": [
          "health-checks"
        ],
        "operationId": "HealthCheck",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      }
    },
    "/{resourceId}/": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get  resources",
        "operationId": "getResourcesById",
        "parameters": [
          {
            "type": "string",
            "description": "resourceId",
            "name": "resourceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "422": {
            "description": "Unprocessable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update resource",
        "operationId": "UpdateResourcesById",
        "parameters": [
          {
            "type": "string",
            "description": "resourceId",
            "name": "resourceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "422": {
            "description": "Unprocessable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Delete resources",
        "operationId": "DeleteResourcesById",
        "parameters": [
          {
            "type": "string",
            "description": "resourceId",
            "name": "resourceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "422": {
            "description": "Unprocessable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "resourceId",
          "type": "string"
        }
      }
    },
    "SimpleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "x-google-endpoints": [
    {
      "name": "service"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Service API",
    "title": "SERVICE",
    "version": "1.0.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/service",
  "paths": {
    "/Resource": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource for a given application.",
        "operationId": "postResourceByAppCode",
        "parameters": [
          {
            "description": "Create a new resource",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "422": {
            "description": "Unprocessable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "security": [],
        "tags": [
          "health-checks"
        ],
        "operationId": "HealthCheck",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      }
    },
    "/{resourceId}/": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get  resources",
        "operationId": "getResourcesById",
        "parameters": [
          {
            "type": "string",
            "description": "resourceId",
            "name": "resourceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "422": {
            "description": "Unprocessable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update resource",
        "operationId": "UpdateResourcesById",
        "parameters": [
          {
            "type": "string",
            "description": "resourceId",
            "name": "resourceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "422": {
            "description": "Unprocessable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Delete resources",
        "operationId": "DeleteResourcesById",
        "parameters": [
          {
            "type": "string",
            "description": "resourceId",
            "name": "resourceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "422": {
            "description": "Unprocessable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/SimpleResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "resourceId",
          "type": "string"
        }
      }
    },
    "SimpleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "x-google-endpoints": [
    {
      "name": "service"
    }
  ]
}`))
}
